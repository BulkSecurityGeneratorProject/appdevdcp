application {
  config {
    baseName dcpdesconformidades
    applicationType monolith
    authenticationType jwt
    buildTool maven
    cacheProvider ehcache
    clientFramework react
    clientPackageManager npm
    databaseType sql
    prodDatabaseType mysql
    jhiPrefix app
    languages [pt-br]
    nativeLanguage pt-br
    packageName br.com.lasa.dcpdesconformidades
    skipUserManagement false
    testFrameworks [protractor]
    useSass true
  }
  entities *
}

enum StatusAvaliacao {
	INICIADA,
    RELATORIO_FINALIZADO,
    ANEXO_AUDITORIA_FINALIZADO,
    ANEXO_SOLICITACAO_AJUSTE_FINALIZADO,
    SUBMETIDO
}

enum StatusItemAvaliado {
	OK, NAO_OK, N_A
}

enum TipoItemAvaliadoPerdaQuebra {
	PERDA, QUEBRA
}

entity Questionario {
	nome String required
    descricao String
    ativo Boolean required
    criadoEm Instant required
}

entity Avaliador {
	nome String required
    login String required
    prontuario Integer required
}

entity Loja {
    nome String required
    nomeResponsavel String required
    prontuarioResponsavel Integer required
    latitude Double required
    longitude Double required
}

entity Avaliacao {
	dataInicio Instant required
    latitudeInicioAvaliacao Double required
    longitudeInicioAvaliacao Double required
    nomeResponsavelLoja String // Caso ele precise sobrescrever e também pra não permitir mudanças
    prontuarioResponsavelLoja Integer // Caso ele precise sobrescrever e também pra não permitir mudanças
    submetidoEm Instant
    latitudeSubmissaoAvaliacao Double
    longitudeSubmissaoAvaliacao Double
    observacaoSubmissaoEnviadaForaDaLoja String
    status StatusAvaliacao required
}

entity ItemAvaliacao {
	descricao String required
    anexoObrigatorio Boolean required
    criadoEm Instant required
}

entity ItemAvaliado {
    respondidoEm Instant required
    ultimaAtualizacaoEm Instant
    status StatusItemAvaliado required
	observacoes String
    latitudeLocalResposta Double required
    longitudeLocalResposta Double required
}

entity ItemAvaliadoPerdaQuebraAcumulados {
	tipo TipoItemAvaliadoPerdaQuebra required
    respondidoEm Instant required
    ultimaAtualizacaoEm Instant
    percentual Double required
    financeiro BigDecimal required
    pontuacao Integer required
    latitudeLocalResposta Double required
    longitudeLocalResposta Double required
}

entity GrupoItens {
	nome String required
    criadoEm Instant required
}

enum TipoAnexoItem {
	IMAGEM
}

entity AnexoItem {
	tipo TipoAnexoItem required
    caminhoArquivo String required
}

enum TipoItemAuditado {
	TOP_5_PERDAS, ALTO_RISCO, TROCA_CANCELAMENTO_DVC
}

entity ItemAuditado {
    respondidoEm Instant required
    ultimaAtualizacaoEm Instant
	tipo TipoItemAuditado required
	departamento Integer required
    codigoSap Integer required
    descricaoItem String required
    saldoSap Integer required
    saldoFisico Integer required
    motivoDivergencia String
}

entity ItemSolicitadoAjuste {
    respondidoEm Instant required
    ultimaAtualizacaoEm Instant
	departamento Integer required
    codigoSap Integer required
    descricaoItem String required
    saldoSap Integer required
    saldoFisico Integer required
    motivoDivergencia String
    acaoCorretivaOuPreventiva String
    responsavel String
}

relationship OneToMany {
	Questionario{avaliacoesRealizadas} to Avaliacao{questionario(nome) required}
    ItemAvaliacao{itensAvaliados} to ItemAvaliado{itemAvaliacao(descricao) required}
    ItemAvaliado{anexos} to AnexoItem{itemAvaliado required}
    Avaliador{avaliacoes} to Avaliacao{avaliador(nome) required}
    Avaliacao{itensAvaliados} to ItemAvaliado{avaliacao required}
    Avaliacao{itensPerdaEQuebraAcumulados(tipo)} to ItemAvaliadoPerdaQuebraAcumulados{avaliacao required}
    Avaliacao{itensAuditados(descricaoItem)} to ItemAuditado{avaliacao required}
    Avaliacao{itensComAjusteSolicitado(descricaoItem)} to ItemSolicitadoAjuste{avaliacao required}
}

relationship ManyToMany {
    GrupoItens{itens(descricao)} to ItemAvaliacao{grupo(nome)}
	Questionario{grupo(nome)} to GrupoItens{questionario(nome)}
    Loja{avaliador(nome)} to Avaliador{loja(nome)}
}

service Questionario, Avaliacao, AnexoItem, Loja, Avaliador, GrupoItens, ItemAvaliacao with serviceClass
paginate Avaliador, Loja, Avaliacao with pagination
dto Avaliacao, Questionario, Avaliador, GrupoItens, ItemAvaliacao with mapstruct